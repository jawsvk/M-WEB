//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleAppForWCF.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCF_Movie", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class WCF_Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MovieTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RentalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MovieTitle {
            get {
                return this.MovieTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieTitleField, value) != true)) {
                    this.MovieTitleField = value;
                    this.RaisePropertyChanged("MovieTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RentalPrice {
            get {
                return this.RentalPriceField;
            }
            set {
                if ((this.RentalPriceField.Equals(value) != true)) {
                    this.RentalPriceField = value;
                    this.RaisePropertyChanged("RentalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalStock {
            get {
                return this.TotalStockField;
            }
            set {
                if ((this.TotalStockField.Equals(value) != true)) {
                    this.TotalStockField = value;
                    this.RaisePropertyChanged("TotalStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoCode {
            get {
                return this.VideoCodeField;
            }
            set {
                if ((this.VideoCodeField.Equals(value) != true)) {
                    this.VideoCodeField = value;
                    this.RaisePropertyChanged("VideoCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMovieIds", ReplyAction="http://tempuri.org/IService/GetMovieIdsResponse")]
        int[] GetMovieIds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMovieIds", ReplyAction="http://tempuri.org/IService/GetMovieIdsResponse")]
        System.Threading.Tasks.Task<int[]> GetMovieIdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMovie", ReplyAction="http://tempuri.org/IService/GetMovieResponse")]
        ConsoleAppForWCF.ServiceReference1.WCF_Movie GetMovie(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMovie", ReplyAction="http://tempuri.org/IService/GetMovieResponse")]
        System.Threading.Tasks.Task<ConsoleAppForWCF.ServiceReference1.WCF_Movie> GetMovieAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ConsoleAppForWCF.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ConsoleAppForWCF.ServiceReference1.IService>, ConsoleAppForWCF.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int[] GetMovieIds() {
            return base.Channel.GetMovieIds();
        }
        
        public System.Threading.Tasks.Task<int[]> GetMovieIdsAsync() {
            return base.Channel.GetMovieIdsAsync();
        }
        
        public ConsoleAppForWCF.ServiceReference1.WCF_Movie GetMovie(string id) {
            return base.Channel.GetMovie(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleAppForWCF.ServiceReference1.WCF_Movie> GetMovieAsync(string id) {
            return base.Channel.GetMovieAsync(id);
        }
    }
}
